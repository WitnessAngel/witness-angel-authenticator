# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: WitnessAngelGuardian\n"
"POT-Creation-Date: 2021-09-22 17:45+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: authenticator_creation_form.py:84
msgid "Please enter a username, passphrase and passphrase hint."
msgstr ""

#: authenticator_creation_form.py:86
#, python-format
msgid "Passphrase must be at least %s characters long."
msgstr ""

#: authenticator_creation_form.py:100
msgid "Validation error"
msgstr ""

#: authenticator_creation_form.py:208
msgid "Please wait a few seconds, initialization is in process."
msgstr ""

#: authenticator_creation_form.py:228
msgid "Initialization successfully completed."
msgstr ""

#: authenticator_creation_form.py:229 keyring_selector.py:434
msgid "Success"
msgstr ""

#: authenticator_creation_form.py:231
msgid "Operation failed, check logs."
msgstr ""

#: authenticator_creation_form.py:232 keyring_selector.py:437
msgid "Failure"
msgstr ""

#: authenticator_creation_form.py:236
msgid ""
"        On this page, you can initialize an authenticator inside an empty "
"folder; this authenticator actually consists in metadata files as well as a "
"set of asymmetric keypairs.\n"
"        \n"
"        To proceed, you have to input your user name or pseudo, a long "
"passphrase (e.g. consisting of 4 different words), and a public hint to help "
"your remember your passphrase later.\n"
"        \n"
"        You should keep your passphrase somewhere safe (in a digital "
"password manager, on a paper in a vault...), because if you forget any of "
"its aspects (upper/lower case, accents, spaces...), there is no way to "
"recover it.\n"
"        "
msgstr ""

#: authenticator_creation_form.py:245
msgid "Authenticator creation page"
msgstr ""

#: keyring_selector.py:244
msgid "No valid authenticator location selected"
msgstr ""

#: keyring_selector.py:246
msgid "Authenticator is not yet initialized"
msgstr ""

#: keyring_selector.py:248
msgid "Authenticator is initialized"
msgstr ""

#: keyring_selector.py:283
msgid "Please select an authenticator folder"
msgstr ""

#: keyring_selector.py:287
#, python-format
msgid ""
"Selected authenticator folder is invalid\n"
"Full path: %s"
msgstr ""

#: keyring_selector.py:291
#, python-format
msgid "Full path: %s"
msgstr ""

#: keyring_selector.py:305
msgid ""
"                AUTHENTICATOR INFORMATION\n"
"                ID: {authenticator_uid}\n"
"                Full path: {authenticator_path}\n"
"                User: {authenticator_user}\n"
"                Password hint: {authenticator_passphrase_hint}\n"
"            "
msgstr ""

#: keyring_selector.py:379
msgid "Destroy authenticator"
msgstr ""

#: keyring_selector.py:380
msgid ""
"Beware, it might make encrypted data using these keys impossible to decrypt."
msgstr ""

#: keyring_selector.py:399
msgid "Deletion is over"
msgstr ""

#: keyring_selector.py:400
#, python-format
msgid "All authentication data from folder %s has been removed."
msgstr ""

#: keyring_selector.py:414
msgid "Sanity check"
msgstr ""

#: keyring_selector.py:435
#, python-format
msgid "Keypairs successfully tested: %s"
msgstr ""

#: keyring_selector.py:440
#, python-format
msgid ""
"Keypairs tested: %s\n"
"Missing private keys: %s\n"
"Wrong passphrase for keys: %s"
msgstr ""

#: keyring_selector.py:446
#, python-format
msgid "Checkup result: %s"
msgstr ""

#: keyring_selector.py:493
msgid "Export successful"
msgstr ""

#: keyring_selector.py:494
#, python-format
msgid "Authenticator archive exported to %s"
msgstr ""

#: keyring_selector.py:511
msgid "Import successful"
msgstr ""

#: keyring_selector.py:512
#, python-format
msgid ""
"Authenticator archive unpacked from %s, its integrity has not been checked "
"though."
msgstr ""

#: keyring_selector.py:519
msgid ""
"        On this page, you can manage your authenticators, which are actually "
"digital keychains identified by unique IDs.\n"
"        \n"
"        These keychains contain both public keys, which can be freely "
"shared, and their corresponding private keys, protected by passphrases, "
"which must be kept hidden.\n"
"        \n"
"        Authenticators can be stored in your user profile or in a custom "
"folder, especially at the root of removable devices.\n"
"        \n"
"        You can initialize new authenticators from scratch, import/export "
"them from/to ZIP archives, or check their integrity by providing their "
"passphrases.\n"
"        \n"
"        Note that if you destroy an authenticator and all its exported ZIP "
"archives, the WitnessAngel recordings which used it as a trusted third party "
"might not be decryptable anymore (unless they used a shared secret with "
"other trusted third parties).\n"
"        "
msgstr ""

#: keyring_selector.py:532
msgid "Authenticator management page"
msgstr ""

#: authenticator_creation_form.kv:15
msgid "Create authenticator"
msgstr ""

#: authenticator_creation_form.kv:21
msgid "Target:"
msgstr ""

#: keyring_selector.kv:6
msgid "User Profile"
msgstr ""

#: keyring_selector.kv:7
msgid "Stored inside system disk"
msgstr ""

#: keyring_selector.kv:14
msgid "Find"
msgstr ""

#: keyring_selector.kv:21
msgid "Custom authenticator location"
msgstr ""

#: keyring_selector.kv:22
msgid "Please select a folder"
msgstr ""

#: keyring_selector.kv:44
msgid "Test integrity and passphrase of authenticator."
msgstr ""

#: keyring_selector.kv:47
msgid "Passphrase"
msgstr ""

#: keyring_selector.kv:65
msgid "Manage Authenticators"
msgstr ""
